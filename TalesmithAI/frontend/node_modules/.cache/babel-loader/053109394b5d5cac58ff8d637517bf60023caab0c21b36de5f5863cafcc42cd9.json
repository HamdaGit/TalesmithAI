{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\fyp\\\\TalesmithAI\\\\frontend\\\\src\\\\Dashboardlogin.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axiosInstance from './axiosSetup'; // Import configured axios instance\nimport { useNavigate } from 'react-router-dom';\nimport './Dashboardlogin.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboardlogin = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const handleLogin = async () => {\n    try {\n      const response = await axiosInstance.post('/api/login/', {\n        email,\n        password\n      });\n      console.log('response', response);\n      const userData = response.data;\n      if (userData.is_staff) {\n        console.log('login clicked');\n        navigate('/report');\n      } else {\n        setError('You are not an admin.');\n      }\n    } catch (error) {\n      console.error(error);\n      setError('Invalid credentials. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Dashboard-login-container-fluid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \" Dashboard-login-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleLogin,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 9\n          }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 8\n    }, this)\n  }, void 0, false);\n};\n_s(Dashboardlogin, \"04s5JR+/x8JdloJ2sm+29L/IvyI=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboardlogin;\nexport default Dashboardlogin;\nvar _c;\n$RefreshReg$(_c, \"Dashboardlogin\");","map":{"version":3,"names":["React","useState","axiosInstance","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboardlogin","_s","email","setEmail","password","setPassword","error","setError","navigate","handleLogin","response","post","console","log","userData","data","is_staff","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/fyp/TalesmithAI/frontend/src/Dashboardlogin.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axiosInstance from './axiosSetup';  // Import configured axios instance\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport './Dashboardlogin.css';\r\n\r\nconst Dashboardlogin= () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const handleLogin = async () => {\r\n        try {\r\n            const response = await axiosInstance.post('/api/login/', { email, password });\r\n            console.log('response', response);\r\n            const userData = response.data;\r\n            if (userData.is_staff) {\r\n                console.log('login clicked');\r\n                navigate('/report');\r\n            } else {\r\n                setError('You are not an admin.');\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n            setError('Invalid credentials. Please try again.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n       <div className='Dashboard-login-container-fluid'>\r\n\r\n    <div className=\" Dashboard-login-container\">\r\n    <div>\r\n        <h2>Login</h2>\r\n        <input\r\n            type=\"text\"\r\n            placeholder=\"Email\"\r\n            value={email}\r\n            onChange={e => setEmail(e.target.value)}\r\n        />\r\n        <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={e => setPassword(e.target.value)}\r\n        />\r\n        <button onClick={handleLogin}>Login</button>\r\n        {error && <p className=\"error\">{error}</p>}\r\n        \r\n    </div>\r\n</div>\r\n</div>\r\n</>\r\n);\r\n};\r\n\r\nexport default Dashboardlogin;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}