{"ast":null,"code":"import React,{useEffect,useState}from'react';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faBars,faTimes,faUser}from'@fortawesome/free-solid-svg-icons';import axiosInstance from'./axiosSetup';import'./Sidebar.css';import logo from'./assest/Tales-logo1.png';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Sidebar=_ref=>{let{isOpen,toggleSidebar,newChat,handleLogout}=_ref;const[showUserDropdown,setShowUserDropdown]=useState(false);const[chatHistory,setChatHistory]=useState([]);// Only state declaration, not a prop\nuseEffect(()=>{// Fetch chat history when the component mounts\nconst fetchChatHistory=async()=>{try{const response=await axiosInstance.get('/api/chat/history/');setChatHistory(response.data.history);}catch(error){console.error('Error fetching chat history:',error);}};fetchChatHistory();},[]);// Empty dependency array to run only once on mount\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"sidebar \".concat(isOpen?'open':''),children:[/*#__PURE__*/_jsx(\"button\",{className:\"toggle-btn\",onClick:toggleSidebar,children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:isOpen?faTimes:faBars})}),/*#__PURE__*/_jsxs(\"div\",{className:\"new-chat\",children:[/*#__PURE__*/_jsx(\"img\",{src:logo,alt:\"TalesmithAI Logo\",style:{width:'50px',height:'50px'}}),/*#__PURE__*/_jsx(\"a\",{href:\"/mainapp\",children:\"TalesmithAI\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-history\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Chat History\"}),chatHistory.map((chat,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"chat-history-item\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"You:\"}),\" \",chat.message]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"AI:\"}),\" \",chat.response]})]},index))]}),isOpen&&/*#__PURE__*/_jsxs(\"div\",{className:\"user-dropdown\",children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faUser,onClick:()=>setShowUserDropdown(!showUserDropdown),style:{color:'#f8f9fa  ',fontSize:'20px'}}),showUserDropdown&&/*#__PURE__*/_jsxs(\"div\",{className:\"dropdown-content\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"Feedback-btn\",children:/*#__PURE__*/_jsx(\"a\",{href:\"/feedback\",children:\"Feedback\"})}),/*#__PURE__*/_jsx(\"button\",{className:\"logout-btn\",onClick:handleLogout,children:\"Logout\"})]})]})]});};export default Sidebar;","map":{"version":3,"names":["React","useEffect","useState","FontAwesomeIcon","faBars","faTimes","faUser","axiosInstance","logo","jsx","_jsx","jsxs","_jsxs","Sidebar","_ref","isOpen","toggleSidebar","newChat","handleLogout","showUserDropdown","setShowUserDropdown","chatHistory","setChatHistory","fetchChatHistory","response","get","data","history","error","console","className","concat","children","onClick","icon","src","alt","style","width","height","href","map","chat","index","message","color","fontSize"],"sources":["C:/Users/hp/Desktop/fyp/TalesmithAI/frontend/src/Sidebar.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBars, faTimes, faUser } from '@fortawesome/free-solid-svg-icons';\r\nimport axiosInstance from './axiosSetup';\r\nimport './Sidebar.css';\r\nimport logo from './assest/Tales-logo1.png';\r\n\r\nconst Sidebar = ({ isOpen, toggleSidebar, newChat, handleLogout }) => {\r\n  const [showUserDropdown, setShowUserDropdown] = useState(false);\r\n  const [chatHistory, setChatHistory] = useState([]); // Only state declaration, not a prop\r\n\r\n  useEffect(() => {\r\n    // Fetch chat history when the component mounts\r\n    const fetchChatHistory = async () => {\r\n      try {\r\n        const response = await axiosInstance.get('/api/chat/history/');\r\n        setChatHistory(response.data.history);\r\n      } catch (error) {\r\n        console.error('Error fetching chat history:', error);\r\n      }\r\n    };\r\n\r\n    fetchChatHistory();\r\n  }, []); // Empty dependency array to run only once on mount\r\n\r\n  return (\r\n    <div className={`sidebar ${isOpen ? 'open' : ''}`}>\r\n      <button className=\"toggle-btn\" onClick={toggleSidebar}>\r\n        <FontAwesomeIcon icon={isOpen ? faTimes : faBars} />\r\n      </button>\r\n      <div className=\"new-chat\">\r\n        <img src={logo} alt=\"TalesmithAI Logo\" style={{ width: '50px', height: '50px' }} />\r\n        <a href=\"/mainapp\">TalesmithAI</a>\r\n      </div>\r\n      <div className=\"chat-history\">\r\n        <p>Chat History</p>\r\n        {chatHistory.map((chat, index) => (\r\n          <div key={index} className=\"chat-history-item\">\r\n            <p><strong>You:</strong> {chat.message}</p>\r\n            <p><strong>AI:</strong> {chat.response}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {isOpen && (\r\n        <div className=\"user-dropdown\">\r\n          <FontAwesomeIcon\r\n            icon={faUser}\r\n            onClick={() => setShowUserDropdown(!showUserDropdown)}\r\n            style={{ color: '#f8f9fa  ', fontSize: '20px' }}\r\n          />\r\n          {showUserDropdown && (\r\n            <div className=\"dropdown-content\">\r\n              <button className=\"Feedback-btn\">\r\n                <a href=\"/feedback\">Feedback</a>\r\n              </button>\r\n              <button className=\"logout-btn\" onClick={handleLogout}>\r\n                Logout\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,eAAe,KAAQ,gCAAgC,CAChE,OAASC,MAAM,CAAEC,OAAO,CAAEC,MAAM,KAAQ,mCAAmC,CAC3E,MAAO,CAAAC,aAAa,KAAM,cAAc,CACxC,MAAO,eAAe,CACtB,MAAO,CAAAC,IAAI,KAAM,0BAA0B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE5C,KAAM,CAAAC,OAAO,CAAGC,IAAA,EAAsD,IAArD,CAAEC,MAAM,CAAEC,aAAa,CAAEC,OAAO,CAAEC,YAAa,CAAC,CAAAJ,IAAA,CAC/D,KAAM,CAACK,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGlB,QAAQ,CAAC,KAAK,CAAC,CAC/D,KAAM,CAACmB,WAAW,CAAEC,cAAc,CAAC,CAAGpB,QAAQ,CAAC,EAAE,CAAC,CAAE;AAEpDD,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAAsB,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACnC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAjB,aAAa,CAACkB,GAAG,CAAC,oBAAoB,CAAC,CAC9DH,cAAc,CAACE,QAAQ,CAACE,IAAI,CAACC,OAAO,CAAC,CACvC,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CACtD,CACF,CAAC,CAEDL,gBAAgB,CAAC,CAAC,CACpB,CAAC,CAAE,EAAE,CAAC,CAAE;AAER,mBACEX,KAAA,QAAKkB,SAAS,YAAAC,MAAA,CAAahB,MAAM,CAAG,MAAM,CAAG,EAAE,CAAG,CAAAiB,QAAA,eAChDtB,IAAA,WAAQoB,SAAS,CAAC,YAAY,CAACG,OAAO,CAAEjB,aAAc,CAAAgB,QAAA,cACpDtB,IAAA,CAACP,eAAe,EAAC+B,IAAI,CAAEnB,MAAM,CAAGV,OAAO,CAAGD,MAAO,CAAE,CAAC,CAC9C,CAAC,cACTQ,KAAA,QAAKkB,SAAS,CAAC,UAAU,CAAAE,QAAA,eACvBtB,IAAA,QAAKyB,GAAG,CAAE3B,IAAK,CAAC4B,GAAG,CAAC,kBAAkB,CAACC,KAAK,CAAE,CAAEC,KAAK,CAAE,MAAM,CAAEC,MAAM,CAAE,MAAO,CAAE,CAAE,CAAC,cACnF7B,IAAA,MAAG8B,IAAI,CAAC,UAAU,CAAAR,QAAA,CAAC,aAAW,CAAG,CAAC,EAC/B,CAAC,cACNpB,KAAA,QAAKkB,SAAS,CAAC,cAAc,CAAAE,QAAA,eAC3BtB,IAAA,MAAAsB,QAAA,CAAG,cAAY,CAAG,CAAC,CAClBX,WAAW,CAACoB,GAAG,CAAC,CAACC,IAAI,CAAEC,KAAK,gBAC3B/B,KAAA,QAAiBkB,SAAS,CAAC,mBAAmB,CAAAE,QAAA,eAC5CpB,KAAA,MAAAoB,QAAA,eAAGtB,IAAA,WAAAsB,QAAA,CAAQ,MAAI,CAAQ,CAAC,IAAC,CAACU,IAAI,CAACE,OAAO,EAAI,CAAC,cAC3ChC,KAAA,MAAAoB,QAAA,eAAGtB,IAAA,WAAAsB,QAAA,CAAQ,KAAG,CAAQ,CAAC,IAAC,CAACU,IAAI,CAAClB,QAAQ,EAAI,CAAC,GAFnCmB,KAGL,CACN,CAAC,EACC,CAAC,CACL5B,MAAM,eACLH,KAAA,QAAKkB,SAAS,CAAC,eAAe,CAAAE,QAAA,eAC5BtB,IAAA,CAACP,eAAe,EACd+B,IAAI,CAAE5B,MAAO,CACb2B,OAAO,CAAEA,CAAA,GAAMb,mBAAmB,CAAC,CAACD,gBAAgB,CAAE,CACtDkB,KAAK,CAAE,CAAEQ,KAAK,CAAE,WAAW,CAAEC,QAAQ,CAAE,MAAO,CAAE,CACjD,CAAC,CACD3B,gBAAgB,eACfP,KAAA,QAAKkB,SAAS,CAAC,kBAAkB,CAAAE,QAAA,eAC/BtB,IAAA,WAAQoB,SAAS,CAAC,cAAc,CAAAE,QAAA,cAC9BtB,IAAA,MAAG8B,IAAI,CAAC,WAAW,CAAAR,QAAA,CAAC,UAAQ,CAAG,CAAC,CAC1B,CAAC,cACTtB,IAAA,WAAQoB,SAAS,CAAC,YAAY,CAACG,OAAO,CAAEf,YAAa,CAAAc,QAAA,CAAC,QAEtD,CAAQ,CAAC,EACN,CACN,EACE,CACN,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAnB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}