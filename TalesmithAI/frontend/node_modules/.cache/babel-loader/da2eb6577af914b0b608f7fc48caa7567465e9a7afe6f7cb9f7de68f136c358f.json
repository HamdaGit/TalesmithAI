{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\fyp\\\\TalesmithAI\\\\frontend\\\\src\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport './Dashboard.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axiosInstance from './axiosSetup'; // Import axiosInstance from axiosSetup.js\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBars, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [reportType, setReportType] = useState('');\n  const [users, setUsers] = useState([]);\n  const [error, setError] = useState('');\n  const handleGenerateReport = useCallback(async () => {\n    try {\n      const response = await axiosInstance.get(`/api/user_report/?type=${reportType}`);\n      setUsers(response.data.users);\n      setError(''); // Clear any previous error\n    } catch (error) {\n      console.error('Error generating report:', error);\n      setError('Error generating report. Please try again.');\n    }\n  }, [reportType]);\n  useEffect(() => {\n    if (reportType) {\n      handleGenerateReport();\n    }\n  }, [reportType, handleGenerateReport]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header text-white p-3\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"m-0\",\n        children: \"TalesmithAI Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-icon\",\n            onClick: () => setIsSidebarOpen(!isSidebarOpen),\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faBars,\n              color: \"black\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `sidebar ${isSidebarOpen ? 'open' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-icon close-btn\",\n              onClick: () => setIsSidebarOpen(false),\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faTimes,\n                color: \"black\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"list-unstyled\",\n              children: /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setIsDropdownOpen(!isDropdownOpen),\n                  children: \"Reports\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 19\n                }, this), isDropdownOpen && /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: /*#__PURE__*/_jsxDEV(\"li\", {\n                    onClick: () => setReportType('All'),\n                    children: \"All Users\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 54,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-9\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"report\",\n            children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"alert alert-danger\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"list-unstyled\",\n              children: users.map((user, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Email: \", user.email]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Username: \", user.username]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Active: \", user.is_active ? 'Yes' : 'No']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Joined: \", new Date(user.timestamp).toLocaleDateString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 21\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"qAqhFHfa61ziY7bQHBqsld4Liaw=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axiosInstance","FontAwesomeIcon","faBars","faTimes","jsxDEV","_jsxDEV","Dashboard","_s","isSidebarOpen","setIsSidebarOpen","isDropdownOpen","setIsDropdownOpen","reportType","setReportType","users","setUsers","error","setError","handleGenerateReport","response","get","data","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","icon","color","map","user","index","email","username","is_active","Date","timestamp","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/fyp/TalesmithAI/frontend/src/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport './Dashboard.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axiosInstance from './axiosSetup'; // Import axiosInstance from axiosSetup.js\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBars, faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Dashboard = () => {\r\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\r\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n  const [reportType, setReportType] = useState('');\r\n  const [users, setUsers] = useState([]);\r\n  const [error, setError] = useState('');\r\n\r\n  const handleGenerateReport = useCallback(async () => {\r\n    try {\r\n      const response = await axiosInstance.get(`/api/user_report/?type=${reportType}`);\r\n      setUsers(response.data.users);\r\n      setError(''); // Clear any previous error\r\n    } catch (error) {\r\n      console.error('Error generating report:', error);\r\n      setError('Error generating report. Please try again.');\r\n    }\r\n  }, [reportType]);\r\n\r\n  useEffect(() => {\r\n    if (reportType) {\r\n      handleGenerateReport();\r\n    }\r\n  }, [reportType, handleGenerateReport]);\r\n\r\n  return (\r\n    <div className=\"admin-dashboard\">\r\n      <header className=\"header text-white p-3\">\r\n        <h1 className=\"m-0\">TalesmithAI Dashboard</h1>\r\n      </header>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-3\">\r\n            <button className=\"btn btn-icon\" onClick={() => setIsSidebarOpen(!isSidebarOpen)}>\r\n              <FontAwesomeIcon icon={faBars} color=\"black\" />\r\n            </button>\r\n            <div className={`sidebar ${isSidebarOpen ? 'open' : ''}`}>\r\n              <button className=\"btn btn-icon close-btn\" onClick={() => setIsSidebarOpen(false)}>\r\n                <FontAwesomeIcon icon={faTimes} color=\"black\" />\r\n              </button>\r\n              <ul className=\"list-unstyled\">\r\n                <li>\r\n                  <button onClick={() => setIsDropdownOpen(!isDropdownOpen)}>\r\n                    Reports\r\n                  </button>\r\n                  {isDropdownOpen && (\r\n                    <ul>\r\n                      <li onClick={() => setReportType('All')}>All Users</li>\r\n                    </ul>\r\n                  )}\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-9\">\r\n            <div className=\"report\">\r\n              {/* <h2>{reportType} Users</h2> */}\r\n              {error && <div className=\"alert alert-danger\">{error}</div>}\r\n              <ul className=\"list-unstyled\">\r\n                {users.map((user, index) => (\r\n                  <li key={index}>\r\n                    <p>Email: {user.email}</p>\r\n                    <p>Username: {user.username}</p>\r\n                    <p>Active: {user.is_active ? 'Yes' : 'No'}</p>\r\n                    <p>Joined: {new Date(user.timestamp).toLocaleDateString()}</p>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}