{"ast":null,"code":"import React,{useEffect,useState,useCallback}from'react';import{useLocation,useNavigate}from'react-router-dom';import axiosInstance from'./axiosSetup';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faBars,faTimes}from'@fortawesome/free-solid-svg-icons';import Sidebar from'./Sidebar';import'./Chat.css';import'./Sidebar.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Chat=()=>{const location=useLocation();const navigate=useNavigate();// Updated to useNavigate\nconst{query}=location.state||{};const[message,setMessage]=useState(query||'');const[chatHistory,setChatHistory]=useState([]);const[loading,setLoading]=useState(false);const[isSidebarOpen,setIsSidebarOpen]=useState(false);const fetchChatHistory=async()=>{try{const response=await axiosInstance.get('/api/chat/history/');console.log('Chat History Response:',response.data);// Debug log\n// Assuming the response data directly contains the chat history\nsetChatHistory(response.data);}catch(error){console.error('Error fetching chat history:',error);}};const sendMessage=useCallback(async messageToSend=>{setLoading(true);setChatHistory(prevHistory=>[...prevHistory,{sender:'user',message:messageToSend}]);try{const response=await axiosInstance.post('/api/chat/',{message:messageToSend});setChatHistory(prevHistory=>[...prevHistory,{sender:'ai',message:response.data.response}]);setMessage('');}catch(error){console.error('Error generating response:',error);setChatHistory(prevHistory=>[...prevHistory,{sender:'ai',message:'Error generating response. Please try again.'}]);}finally{setLoading(false);}},[]);useEffect(()=>{if(query){sendMessage(query);}},[query,sendMessage]);const handleSendMessage=()=>{if(message.trim()){sendMessage(message);}};const toggleSidebar=()=>{setIsSidebarOpen(!isSidebarOpen);};const handleNewChat=()=>{setChatHistory([]);setMessage('');fetchChatHistory();};const handleLogout=async()=>{try{await axiosInstance.post('/api/logout/');navigate('/login');// Updated to use navigate\n}catch(error){console.error('Error logging out:',error);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"chat-page\",children:[/*#__PURE__*/_jsx(Sidebar,{isOpen:isSidebarOpen,toggleSidebar:toggleSidebar,newChat:handleNewChat,handleLogout:handleLogout}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-content \".concat(isSidebarOpen?'sidebar-open':''),children:[/*#__PURE__*/_jsx(\"button\",{className:\"toggle-btn\",onClick:toggleSidebar,children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:isSidebarOpen?faTimes:faBars})}),/*#__PURE__*/_jsx(\"div\",{className:\"chat-history\",children:chatHistory.map((chat,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"chat-message \".concat(chat.sender),children:[/*#__PURE__*/_jsx(\"span\",{children:chat.sender==='user'?'You: ':'AI: '}),chat.message]},index))}),loading&&/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Generating your response...\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-input\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:message,onChange:e=>setMessage(e.target.value),placeholder:\"Type your message...\",disabled:loading}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSendMessage,disabled:loading,children:\"Send\"})]})]})]});};export default Chat;","map":{"version":3,"names":["React","useEffect","useState","useCallback","useLocation","useNavigate","axiosInstance","FontAwesomeIcon","faBars","faTimes","Sidebar","jsx","_jsx","jsxs","_jsxs","Chat","location","navigate","query","state","message","setMessage","chatHistory","setChatHistory","loading","setLoading","isSidebarOpen","setIsSidebarOpen","fetchChatHistory","response","get","console","log","data","error","sendMessage","messageToSend","prevHistory","sender","post","handleSendMessage","trim","toggleSidebar","handleNewChat","handleLogout","className","children","isOpen","newChat","concat","onClick","icon","map","chat","index","type","value","onChange","e","target","placeholder","disabled"],"sources":["C:/Users/hp/Desktop/fyp/TalesmithAI/frontend/src/Chat.jsx"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport axiosInstance from './axiosSetup';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBars, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport Sidebar from './Sidebar';\r\nimport './Chat.css';\r\nimport './Sidebar.css';\r\n\r\nconst Chat = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();  // Updated to useNavigate\r\n  const { query } = location.state || {};\r\n  const [message, setMessage] = useState(query || '');\r\n  const [chatHistory, setChatHistory] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\r\n\r\n  const fetchChatHistory = async () => {\r\n    try {\r\n      const response = await axiosInstance.get('/api/chat/history/');\r\n      console.log('Chat History Response:', response.data); // Debug log\r\n    // Assuming the response data directly contains the chat history\r\n      setChatHistory(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching chat history:', error);\r\n    }\r\n  };\r\n\r\n  const sendMessage = useCallback(async (messageToSend) => {\r\n    setLoading(true);\r\n    setChatHistory((prevHistory) => [...prevHistory, { sender: 'user', message: messageToSend }]);\r\n    try {\r\n      const response = await axiosInstance.post('/api/chat/', { message: messageToSend });\r\n      setChatHistory((prevHistory) => [\r\n        ...prevHistory,\r\n        { sender: 'ai', message: response.data.response },\r\n      ]);\r\n      setMessage('');\r\n    } catch (error) {\r\n      console.error('Error generating response:', error);\r\n      setChatHistory((prevHistory) => [\r\n        ...prevHistory,\r\n        { sender: 'ai', message: 'Error generating response. Please try again.' },\r\n      ]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (query) {\r\n      sendMessage(query);\r\n    }\r\n  }, [query, sendMessage]);\r\n\r\n  const handleSendMessage = () => {\r\n    if (message.trim()) {\r\n      sendMessage(message);\r\n    }\r\n  };\r\n\r\n  const toggleSidebar = () => {\r\n    setIsSidebarOpen(!isSidebarOpen);\r\n  };\r\n\r\n  const handleNewChat = () => {\r\n    setChatHistory([]);\r\n    setMessage('');\r\n    fetchChatHistory();\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      await axiosInstance.post('/api/logout/');\r\n      navigate('/login');  // Updated to use navigate\r\n    } catch (error) {\r\n      console.error('Error logging out:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-page\">\r\n      <Sidebar\r\n        isOpen={isSidebarOpen}\r\n        toggleSidebar={toggleSidebar}\r\n        newChat={handleNewChat}\r\n        handleLogout={handleLogout}\r\n      />\r\n      <div className={`chat-content ${isSidebarOpen ? 'sidebar-open' : ''}`}>\r\n        <button className=\"toggle-btn\" onClick={toggleSidebar}>\r\n          <FontAwesomeIcon icon={isSidebarOpen ? faTimes : faBars} />\r\n        </button>\r\n        <div className=\"chat-history\">\r\n          {chatHistory.map((chat, index) => (\r\n            <div key={index} className={`chat-message ${chat.sender}`}>\r\n              <span>{chat.sender === 'user' ? 'You: ' : 'AI: '}</span>{chat.message}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        {loading && <div className=\"loading\">Generating your response...</div>}\r\n        <div className=\"chat-input\">\r\n          <input\r\n            type=\"text\"\r\n            value={message}\r\n            onChange={(e) => setMessage(e.target.value)}\r\n            placeholder=\"Type your message...\"\r\n            disabled={loading}\r\n          />\r\n          <button onClick={handleSendMessage} disabled={loading}>\r\n            Send\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}