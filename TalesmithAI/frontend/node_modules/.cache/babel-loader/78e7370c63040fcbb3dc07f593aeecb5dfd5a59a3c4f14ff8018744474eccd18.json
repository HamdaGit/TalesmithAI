{"ast":null,"code":"// frontend/src/Chat.jsx\nimport React,{useEffect,useState}from'react';import{useLocation}from'react-router-dom';import axiosInstance from'./axiosSetup';import'./Chat.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Chat=()=>{const location=useLocation();const{query}=location.state||{};const[storyResponse,setStoryResponse]=useState(null);const[loading,setLoading]=useState(false);useEffect(()=>{const fetchStory=async()=>{if(!query)return;setLoading(true);try{const response=await axiosInstance.post('/api/chat/',{message:query});setStoryResponse(response.data);}catch(error){console.error('Error generating story:',error);}finally{setLoading(false);}};fetchStory();},[query]);return/*#__PURE__*/_jsxs(\"div\",{className:\"chat-page\",children:[loading&&/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:\"Generating your story...\"}),storyResponse&&/*#__PURE__*/_jsx(\"div\",{className:\"response-section\",children:/*#__PURE__*/_jsx(\"p\",{children:storyResponse.choices[0].message.content})})]});};export default Chat;","map":{"version":3,"names":["React","useEffect","useState","useLocation","axiosInstance","jsx","_jsx","jsxs","_jsxs","Chat","location","query","state","storyResponse","setStoryResponse","loading","setLoading","fetchStory","response","post","message","data","error","console","className","children","choices","content"],"sources":["C:/Users/hp/Desktop/fyp/TalesmithAI/frontend/src/Chat.jsx"],"sourcesContent":["// frontend/src/Chat.jsx\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport axiosInstance from './axiosSetup';\r\nimport './Chat.css';\r\n\r\nconst Chat = () => {\r\n  const location = useLocation();\r\n  const { query } = location.state || {};\r\n  const [storyResponse, setStoryResponse] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchStory = async () => {\r\n      if (!query) return;\r\n      setLoading(true);\r\n      try {\r\n        const response = await axiosInstance.post('/api/chat/', { message: query });\r\n        setStoryResponse(response.data);\r\n      } catch (error) {\r\n        console.error('Error generating story:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchStory();\r\n  }, [query]);\r\n\r\n  return (\r\n    <div className=\"chat-page\">\r\n      {loading && <div className=\"loading\">Generating your story...</div>}\r\n      {storyResponse && (\r\n        <div className=\"response-section\">\r\n          <p>{storyResponse.choices[0].message.content}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"AAAA;AAEA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,MAAO,CAAAC,aAAa,KAAM,cAAc,CACxC,MAAO,YAAY,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEpB,KAAM,CAAAC,IAAI,CAAGA,CAAA,GAAM,CACjB,KAAM,CAAAC,QAAQ,CAAGP,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAEQ,KAAM,CAAC,CAAGD,QAAQ,CAACE,KAAK,EAAI,CAAC,CAAC,CACtC,KAAM,CAACC,aAAa,CAAEC,gBAAgB,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CACxD,KAAM,CAACa,OAAO,CAAEC,UAAU,CAAC,CAAGd,QAAQ,CAAC,KAAK,CAAC,CAE7CD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAgB,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7B,GAAI,CAACN,KAAK,CAAE,OACZK,UAAU,CAAC,IAAI,CAAC,CAChB,GAAI,CACF,KAAM,CAAAE,QAAQ,CAAG,KAAM,CAAAd,aAAa,CAACe,IAAI,CAAC,YAAY,CAAE,CAAEC,OAAO,CAAET,KAAM,CAAC,CAAC,CAC3EG,gBAAgB,CAACI,QAAQ,CAACG,IAAI,CAAC,CACjC,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,CAAEA,KAAK,CAAC,CACjD,CAAC,OAAS,CACRN,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAEDC,UAAU,CAAC,CAAC,CACd,CAAC,CAAE,CAACN,KAAK,CAAC,CAAC,CAEX,mBACEH,KAAA,QAAKgB,SAAS,CAAC,WAAW,CAAAC,QAAA,EACvBV,OAAO,eAAIT,IAAA,QAAKkB,SAAS,CAAC,SAAS,CAAAC,QAAA,CAAC,0BAAwB,CAAK,CAAC,CAClEZ,aAAa,eACZP,IAAA,QAAKkB,SAAS,CAAC,kBAAkB,CAAAC,QAAA,cAC/BnB,IAAA,MAAAmB,QAAA,CAAIZ,aAAa,CAACa,OAAO,CAAC,CAAC,CAAC,CAACN,OAAO,CAACO,OAAO,CAAI,CAAC,CAC9C,CACN,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAAlB,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}