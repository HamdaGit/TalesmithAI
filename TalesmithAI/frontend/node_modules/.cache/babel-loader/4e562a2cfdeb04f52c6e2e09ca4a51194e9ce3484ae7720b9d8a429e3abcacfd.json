{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\fyp\\\\TalesmithAI\\\\frontend\\\\src\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Dashboard.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axiosInstance from './axiosSetup'; // Import axiosInstance from axiosSetup.js\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [reportType, setReportType] = useState('');\n  const [users, setUsers] = useState([]);\n  const [isAdmin, setIsAdmin] = useState(false);\n  useEffect(() => {\n    const checkAdmin = async () => {\n      try {\n        const response = await axiosInstance.get('/api/is_admin/');\n        setIsAdmin(response.data.is_admin);\n      } catch (error) {\n        console.error('Error checking admin status:', error);\n      }\n    };\n    checkAdmin();\n  }, []);\n  useEffect(() => {\n    if (reportType) {\n      handleGenerateReport();\n    }\n  }, [reportType]);\n  const handleGenerateReport = async () => {\n    try {\n      const response = await axiosInstance.get(`/api/user_report/?type=${reportType}`);\n      setUsers(response.data.users);\n    } catch (error) {\n      console.error('Error generating report:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-dashboard\",\n    children: isAdmin && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"header text-white p-3\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"m-0\",\n          children: \"TalesmithAI Admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              onClick: () => setIsSidebarOpen(!isSidebarOpen),\n              children: \"Toggle Sidebar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `sidebar ${isSidebarOpen ? 'open' : ''}`,\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"list-unstyled\",\n                children: /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => setIsDropdownOpen(!isDropdownOpen),\n                    children: \"Reports\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 56,\n                    columnNumber: 23\n                  }, this), isDropdownOpen && /*#__PURE__*/_jsxDEV(\"ul\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                      onClick: () => setReportType('Subscribed'),\n                      children: \"Subscribed Users\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 61,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                      onClick: () => setReportType('Unsubscribed'),\n                      children: \"Unsubscribed Users\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 62,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                      onClick: () => setReportType('All'),\n                      children: \"All Users\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 63,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 60,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-9\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-secondary\",\n              onClick: handleGenerateReport,\n              children: \"Generate Report\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"report\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: [reportType, \" Users\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"list-unstyled\",\n                children: users.map((user, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Email: \", user.email]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Username: \", user.username]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Active: \", user.is_active ? 'Yes' : 'No']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"Joined: \", new Date(user.timestamp).toLocaleDateString()]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 25\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"F4YKgsRHC4mHzhBTh1a7lkOzw5c=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axiosInstance","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","isSidebarOpen","setIsSidebarOpen","isDropdownOpen","setIsDropdownOpen","reportType","setReportType","users","setUsers","isAdmin","setIsAdmin","checkAdmin","response","get","data","is_admin","error","console","handleGenerateReport","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","user","index","email","username","is_active","Date","timestamp","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/fyp/TalesmithAI/frontend/src/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Dashboard.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport axiosInstance from './axiosSetup'; // Import axiosInstance from axiosSetup.js\r\n\r\nconst Dashboard = () => {\r\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\r\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n  const [reportType, setReportType] = useState('');\r\n  const [users, setUsers] = useState([]);\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const checkAdmin = async () => {\r\n      try {\r\n        const response = await axiosInstance.get('/api/is_admin/');\r\n        setIsAdmin(response.data.is_admin);\r\n      } catch (error) {\r\n        console.error('Error checking admin status:', error);\r\n      }\r\n    };\r\n    checkAdmin();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (reportType) {\r\n      handleGenerateReport();\r\n    }\r\n  }, [reportType]);\r\n\r\n  const handleGenerateReport = async () => {\r\n    try {\r\n      const response = await axiosInstance.get(`/api/user_report/?type=${reportType}`);\r\n      setUsers(response.data.users);\r\n    } catch (error) {\r\n      console.error('Error generating report:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin-dashboard\">\r\n      {isAdmin && (\r\n        <>\r\n          <header className=\"header text-white p-3\">\r\n            <h1 className=\"m-0\">TalesmithAI Admin</h1>\r\n          </header>\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <div className=\"col-3\">\r\n                <button className=\"btn btn-primary\" onClick={() => setIsSidebarOpen(!isSidebarOpen)}>\r\n                  Toggle Sidebar\r\n                </button>\r\n                <div className={`sidebar ${isSidebarOpen ? 'open' : ''}`}>\r\n                  <ul className=\"list-unstyled\">\r\n                    <li>\r\n                      <button onClick={() => setIsDropdownOpen(!isDropdownOpen)}>\r\n                        Reports\r\n                      </button>\r\n                      {isDropdownOpen && (\r\n                        <ul>\r\n                          <li onClick={() => setReportType('Subscribed')}>Subscribed Users</li>\r\n                          <li onClick={() => setReportType('Unsubscribed')}>Unsubscribed Users</li>\r\n                          <li onClick={() => setReportType('All')}>All Users</li>\r\n                        </ul>\r\n                      )}\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-9\">\r\n                <button className=\"btn btn-secondary\" onClick={handleGenerateReport}>\r\n                  Generate Report\r\n                </button>\r\n                <div className=\"report\">\r\n                  <h2>{reportType} Users</h2>\r\n                  <ul className=\"list-unstyled\">\r\n                    {users.map((user, index) => (\r\n                      <li key={index}>\r\n                        <p>Email: {user.email}</p>\r\n                        <p>Username: {user.username}</p>\r\n                        <p>Active: {user.is_active ? 'Yes' : 'No'}</p>\r\n                        <p>Joined: {new Date(user.timestamp).toLocaleDateString()}</p>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}